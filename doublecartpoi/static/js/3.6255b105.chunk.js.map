{"version":3,"sources":["../../physm-rs/pkg/physm_rs_bg.js","../node_modules/webpack/buildin/harmony-module.js","../../physm-rs/pkg/physm_rs.js"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetFloat64Memory0","getFloat64Memory0","Float64Array","passArrayF64ToWasm0","cachegetInt32Memory0","getInt32Memory0","Int32Array","SolverContext","scene_json","ptr0","len0","__wrap","this","Object","create","prototype","flattened_states","delta_time","tick_count","ext_forces","ptr1","len1","runge_kutta","__wbindgen_string_new","arg0","arg1","__wbindgen_object_drop_ref","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbg_log_3bafd82835c6de6d","log","__wbindgen_throw","__wbindgen_rethrow","exports","originalModule","webpackPolyfill","children","defineProperty","enumerable","get","l","i"],"mappings":"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","file":"static/js/3.6255b105.chunk.js","sourcesContent":["import * as wasm from './physm_rs_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n    if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachegetFloat64Memory0;\n}\n\nfunction passArrayF64ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 8);\n    getFloat64Memory0().set(arg, ptr / 8);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport class SolverContext {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SolverContext.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_solvercontext_free(ptr);\n    }\n    /**\n    * @param {string} scene_json\n    */\n    constructor(scene_json) {\n        var ptr0 = passStringToWasm0(scene_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.solvercontext_new(ptr0, len0);\n        return SolverContext.__wrap(ret);\n    }\n    /**\n    * @param {Float64Array} flattened_states\n    * @param {number} delta_time\n    * @param {number} tick_count\n    * @param {Float64Array} ext_forces\n    */\n    tick(flattened_states, delta_time, tick_count, ext_forces) {\n        try {\n            var ptr0 = passArrayF64ToWasm0(flattened_states, wasm.__wbindgen_malloc);\n            var len0 = WASM_VECTOR_LEN;\n            var ptr1 = passArrayF64ToWasm0(ext_forces, wasm.__wbindgen_malloc);\n            var len1 = WASM_VECTOR_LEN;\n            wasm.solvercontext_tick(this.ptr, ptr0, len0, delta_time, tick_count, ptr1, len1);\n        } finally {\n            flattened_states.set(getFloat64Memory0().subarray(ptr0 / 8, ptr0 / 8 + len0));\n            wasm.__wbindgen_free(ptr0, len0 * 8);\n        }\n    }\n    /**\n    * @param {boolean} runge_kutta\n    */\n    setRungeKutta(runge_kutta) {\n        wasm.solvercontext_setRungeKutta(this.ptr, runge_kutta);\n    }\n    /**\n    */\n    dispose() {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        wasm.solvercontext_dispose(ptr);\n    }\n}\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbg_log_3bafd82835c6de6d = function(arg0) {\n    console.log(getObject(arg0));\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as wasm from \"./physm_rs_bg.wasm\";\nexport * from \"./physm_rs_bg.js\";"],"sourceRoot":""}